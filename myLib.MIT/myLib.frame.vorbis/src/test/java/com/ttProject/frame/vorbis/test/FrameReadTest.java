package com.ttProject.frame.vorbis.test;

import java.nio.ByteBuffer;

import org.apache.log4j.Logger;
import org.junit.Test;

import com.ttProject.frame.vorbis.VorbisHeaderBufferSplitter;
import com.ttProject.nio.channels.ByteReadChannel;
import com.ttProject.nio.channels.IReadChannel;
import com.ttProject.util.HexUtil;

/**
 * vorbisのframeの読み込み動作テスト
 * @author taktod
 *
 */
public class FrameReadTest {
	/** ロガー */
	private Logger logger = Logger.getLogger(FrameReadTest.class);
	/**
	 * header部分読み込みテスト
	 * @throws Exception
	 */
	@Test
	public void headerReadTest() throws Exception {
		IReadChannel channel = new ByteReadChannel(HexUtil.makeBuffer(
				"021E5601766F72626973000000000244AC0000FFFFFFFF00770100FFFFFFFFB801"
				+ "03766F726269732D000000586970682E4F7267206C6962566F7262697320492032303130313130312028536368617566656E7567676574290100000015000000656E636F6465723D4C61766335342E31302E31303001"
				+ "05766F726269732542435601004000002473182A46A5731684101A425019E31C42CE6BEC19424C11821C324C5BCB25739021A4A042885B2881D09055000040000087417814848A41082184253D589283273D082184883978148469410821841042082184104208218445396892832741081D84E330380C83E538F81C8445395810832741E820840F42B89A83AC3908218424354850830639E81C84C22C288A82C430B816840435288C82E430C8D4830B42889A834935F81A846741781684694108218424414890830641C8188446415892830639B81484CB41A81A842A39081F842034641500900000A0A2288AA2280A101AB20A00C8000010405114C7711CC9911CC9B11C0B080D590500000100080000A0488AA4488EE44892245992255992255992E689AA2CCBB22CCBB22CCB32101AB20A0048000050510C45711407080D59050064000008A0388AA5588AA5688AE7888E088486AC0200800000040000103443533C479444CF5455D7B66DDBB66DDBB66DDBB66DDBB66D5B966519080D59050040000010D26966A9068830031906424356010008000080118A30C480D09055000040000080184A0EA209AD39DF9CE3A0590E9A4AB1391D9C48B579929B8AB939E79C73CEC9E69C31CE39E79CA29C590C9A09AD39E79CC4A0590A9A09AD39E79C27B179D09A2AAD39E79C71CEE9609C11C639E79C26AD79909A8DB539E79C05AD698E9A4BB139E79C48B979529B4BB539E79C73CE39E79C73CE39E79CEAC5E91C9C13CE39E79CA8BDB9969BD0C539E79C4FC6E9DE9C10CE39E79C73CE39E79C73CE39E79C20346415000004004010868D61DC2908D2E768204611621A32E941F7E830091A839C42EAD1E868A4943A08259571524A27080D590500000200400821851452482185145248218514628821861872CA29A7A0824A2AA9A8A28C32CB2CB3CC32CB2CB3CC3AECACB30E3B0C31C410432BADC452536D35D6586BEE39E79A83B4565A6BADB5524A29A594520A4243560100200000044206196490514821851462"
				
				
				
				
				+ "78C20D4ED0292A752000000000000C00F00000905C001111D1CC6164686C7074787C8084888C9008000000000018007C00002425404444347318191A1B1C1D1E1F20212223240100800002000000002080000404040000000000020000000404"
		));
		VorbisHeaderBufferSplitter splitter = new VorbisHeaderBufferSplitter();
		for(ByteBuffer buffer : splitter.doSplit(channel)) {
			logger.info(HexUtil.toHex(buffer, 0, 20, true));
		}
	}
	public void readTest() {
		String a = "84E78B5B4A373C5FDC52BABBA2B10EAA821157F4E5D4442291482412193B76ECD8B17DBD5EAFD7EB39";
		String b = "FA893E86DDA47EB7780DD8C9E0137D0CBB49FD6EF11AB0938127E8F57A00004801000000000000000000000000000000009079822693F9027E8F17651D00D8DC0D8BCD74B5582D568BD562B5CD9C3173C6CC19D3C974320E631A";
	}
}
